<?php
namespace App\Controller;

use App\Controller\AppController;

/**
 * Portada Controller
 *
 * @property \App\Model\Table\PortadaTable $Portada
 */
class PortadaController extends AppController
{

    // public function beforeFilter() {
    //     parent::beforeFilter($event);
    //     $this->Auth->allow();
    // }
    // public function beforeFilter(Event $event)
    // {
    //    // allow all action
    //     parent::beforeFilter($event);
    //     $this->Auth->allow();
    // }
    // public function isAuthorized($user)
    // {
    //     $this->Auth->allow();
    //     if (isset($user['rol_id']) && $user['rol_id'] == 1) {
    //         return true;
    //     }
    //     return false;
    // }
    public function initialize()
    {

        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('User');
        //$this->Functions = new FunctionsHelper(new \Cake\View\View());
    }
    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {
        // $portada = $this->paginate($this->Portada);
        // echo $this->Functions->generate_token('asdasd','asdasd');
        // die();
        return $this->redirect("/admin");
        $portada = 's';
        $this->set(compact('portada'));
        $this->set('_serialize', ['portada']);
    }

    /**
     * View method
     *
     * @param string|null $id Portada id.
     * @return \Cake\Network\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        echo "<pre>";
        $data = [
            'role_id'    => 1,
            'username'  => 'elvis.sanchezaasdasdsdasdasdasdsdasdasdasdasd',
            'names'   => 'Elasdasasdasddasdasdvis Maasdadnuel',
            'surnames' => 'Sancaasdaasdasdsdasdhez Gonzales',
            'email'     => 'elvissg.sis@gmasdaasdasdasdasdasdil.com',
            'password'  => "holamuasdnasdasddo",
            'created'   => date('Y-m-d H:i:s'),
            'modified'  => date('Y-m-d H:i:s'),
            'token' =>  md5('ab513c75f48d82bcd30aa48e478d2e6eelvis.sanchez')
        ];
        $user = $this->User->newEntity();
            $user = $this->User->patchEntity($user, $data);

            if ($this->User->save($user)) {
                print_r("se guardooooooo");
            }

        print_r(ROOT .DS. "Vendor" . DS  . "MyClass" . DS . "MyClass.php");
        die();
        // $portada = $this->Portada->get($id, [
        //     'contain' => []
        // ]);
        $portada = 's';
        $this->set('portada', $portada);
        $this->set('_serialize', ['portada']);

    }

    /**
     * Add method
     *
     * @return \Cake\Network\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $this->Portada->newEntity();
        $portada = $this->Portada->newEntity();
        if ($this->request->is('post')) {
            $portada = $this->Portada->patchEntity($portada, $this->request->getData());
            if ($this->Portada->save($portada)) {
                $this->Flash->success(__('The portada has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The portada could not be saved. Please, try again.'));
        }
        $this->set(compact('portada'));
        $this->set('_serialize', ['portada']);
    }

    /**
     * Edit method
     *
     * @param string|null $id Portada id.
     * @return \Cake\Network\Response|null Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $portada = $this->Portada->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $portada = $this->Portada->patchEntity($portada, $this->request->getData());
            if ($this->Portada->save($portada)) {
                $this->Flash->success(__('The portada has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The portada could not be saved. Please, try again.'));
        }
        $this->set(compact('portada'));
        $this->set('_serialize', ['portada']);
    }

    /**
     * Delete method
     *
     * @param string|null $id Portada id.
     * @return \Cake\Network\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $portada = $this->Portada->get($id);
        if ($this->Portada->delete($portada)) {
            $this->Flash->success(__('The portada has been deleted.'));
        } else {
            $this->Flash->error(__('The portada could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }
}
