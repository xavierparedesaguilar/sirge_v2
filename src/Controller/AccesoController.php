<?php
namespace App\Controller;

use App\Controller\AppController;
use App\View\Helper\FunctionsHelper;
use Cake\Datasource\loadModel;
use Cake\ORM\TableRegistry;

/**
 * Acceso Controller
 *
 * @property \App\Model\Table\AccesoTable $Acceso
 */
class AccesoController extends AppController
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('User');
    }

    public function isAuthorized($user)
    {
        if (isset($user['rol_id']) && $user['rol_id'] != 1) {
            if (in_array($this->request->action, ['index', 'logout'])) {
                return true;
            }
        }
        return parent::isAuthorized($user);
    }

    public function index()
    {

    }

    public function login()
    {
        return $this->redirect("/admin");
        $is_login = $this->request->session()->read('Auth.User');
        if ($is_login) {
            return $this->redirect(['controller' => 'Portada', 'action' => 'index']);
        }
        if ($this->request->is('post')) {
            $user = $this->Auth->identify();
            if ($user) {

                $name_ = explode(" ", $user['names']);
                $apel_ = explode(" ", $user['surnames']);
                $user['names'] = $name_[0] . " " . $apel_[0];
                $user['modulos'] = [
                                        'id'=> 1,
                                        'modulo_id'=> 1,
                                        'usuario_id'=> 1,
                                        'permisos'=> "1,2,3,4,5,6,7"
                                    ];
                $user['controlador'] = [1=> "index,crear,editar,importar,exportar,eliminar,detalle"];

                $this->Auth->setUser($user);
                return $this->redirect($this->Auth->redirectUrl());
            } else {
                $this->Flash->error('Ocurrió inconveniente al iniciar sesión, intentalo nuevamente', ['key' => 'auth']);
            }
        }
    }

    public function logout()
    {
        return $this->redirect($this->Auth->logout());
    }

    private function textMetodo($array_)
    {
        $exp = explode(',', $array_);
        $temp = [];
        foreach ($exp as $key => $val) {
            if ($val == 1) $temp[$key] = "index";
            if ($val == 2) $temp[$key] = "crear";
            if ($val == 3) $temp[$key] = "editar";
            if ($val == 4) $temp[$key] = "importar";
            if ($val == 5) $temp[$key] = "exportar";
            if ($val == 6) $temp[$key] = "eliminar";
            if ($val == 7) $temp[$key] = "detalle";
        }
        $print_ = implode(',', $temp);
        return $print_;
    }

}
