<?php
//namespace App\Controller;
namespace App\Controller\Admin;

//use App\Controller\AppController;
use App\Controller\Admin\AppController;
use App\View\Helper\FunctionsHelper;
use Cake\Datasource\loadModel;
use Cake\ORM\TableRegistry;

/**
 * Acceso Controller
 *
 * @property \App\Model\Table\AccesoTable $Acceso
 */
class AccesoController extends AppController
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('User');
        $this->loadModel('ModuleUser');
    }

    public function isAuthorized($user)
    {
        if (isset($user['rol_id']) && $user['rol_id'] != 1) {
            if (in_array($this->request->action, ['index', 'logout'])) {
                return true;
            }
        }
        return parent::isAuthorized($user);
    }

    public function index()
    {

    }

    public function login()
    {
        $is_login = $this->request->session()->read('Auth.User');

        if ($is_login) {

            return $this->redirect(['controller' => 'Portada', 'action' => 'index']);
        }

        if ($this->request->is('post')) {
            $usuario = $this->User->find()->contain('Role')->where(['User.username' => $this->request->data(['username']) ])->first();
            $user = $this->Auth->identify();

            if($usuario != NULL){

                if($usuario['status'] == '1'){

                    if ($user) {

                        $name_ = explode(" ", $user['names']);
                        $apel_ = explode(" ", $user['surnames']);
                        $user['names'] = $name_[0] . " " . $apel_[0];
                        $user['rol_name'] = $usuario->role->name;

                        $user['modulos'] = $this->ModuleUser->find()->where(['user_id' => $user['id'] ])->toArray();

                        $temp = [];

                        foreach ($user['modulos'] as $key => $value) {
                            $temp[$value->module_id] = $value->permissions;
                        }

                        foreach ($temp as $keye => $val) {

                            $user['controlador'][$keye] = $this->textMetodo($val);
                        }

                        $this->Auth->setUser($user);

                        return $this->redirect($this->Auth->redirectUrl());

                    } else {

                        $this->Flash->error('ContraseÃ±a incorrecta, intentalo nuevamente', ['key' => 'auth']);
                    }

                } else {

                    $this->Flash->error('El usuario no tiene acceso.', ['key' => 'auth']);
                }

            }else {

                 $this->Flash->error('Las credenciales ingresadas son incorrectas, intentalo nuevamente', ['key' => 'auth']);
            }
        }
    }

    public function logout()
    {
        return $this->redirect($this->Auth->logout());
    }

    private function textMetodo($array_)
    {
        $exp = explode(',', $array_);
        $temp = [];
        foreach ($exp as $key => $val) {
            // if ($val == 1) $temp[$key] = "index";
            // if ($val == 2) $temp[$key] = "crear";
            // if ($val == 3) $temp[$key] = "editar";
            // if ($val == 4) $temp[$key] = "importar";
            // if ($val == 5) $temp[$key] = "exportar";
            // if ($val == 6) $temp[$key] = "eliminar";
            // if ($val == 7) $temp[$key] = "detalle";

            if ($val == 1) $temp[$key] = "index";
            if ($val == 2) $temp[$key] = "add";
            if ($val == 3) $temp[$key] = "edit";
            if ($val == 4) $temp[$key] = "importar";
            if ($val == 5) $temp[$key] = "exportar";
            if ($val == 6) $temp[$key] = "delete";
            if ($val == 7) $temp[$key] = "view";
        }
        $print_ = implode(',', $temp);
        return $print_;
    }

}
